!function(){"use strict";function e(){var e=$("#editionSelect");e.toggleClass("active").children(".arrow").toggleClass("s-arrow n-arrow"),e.children(".link").toggle()}function t(e){function t(){var t=e[a].width,o=e[a].height,r=$(this);i=r.width(),o&&(n=r.height(),r.height(o)),r.width(t).parentsUntil(e[a].parent).width(t),r.highcharts().reflow()}for(var a in e){var i,n;$(a).each(t),e[a].width=i,e[a].height=n}}function a(e){var t=$("#map");for(var a in e){var i={},n=t.find(a);for(var o in e[a].css)i[o]=n.css(o);n.css(e[a].css),e[a].css=i}}function i(){r()}function n(){l()}function o(){i(),setTimeout(function(){window.print(),n()},1e3)}function r(){S={img:{css:{width:300,height:203}},".labels .wheeler":{css:{top:"65px",left:"85px","font-size":"11px"}},".labels .north":{css:{top:"120px",left:"170px","font-size":"11px"}},".labels .south":{css:{top:"195px",left:"185px","font-size":"11px"}}},A={".load-column":{parent:".graph-container",width:67},".load-curve":{parent:".graph-container",width:192},".price-graph":{parent:".graph-container",width:240},"#receipts,#change,#inventory,#zones":{parent:".section",width:300,height:115},"#elec_imports,#sp15":{parent:".section",width:301,height:115},"#laTemps":{parent:".section",width:300},"#socal_border":{parent:".section",width:225}},t(A),a(S)}function l(){t(A),a(S)}var s=window.location.pathname.split("/");s.pop();var c=null!==window.location.search.match("print"),d={winter:{label:"Winter",link:{text:"Summer edition",href:"../summer"}},summer:{label:"Summer",link:{text:"Winter edition",href:"../winter"}}}[s[s.length-1].toLowerCase()],h={elec_green:"#92a753",light_elec_green:"#d3dbb9",dark_elec_green:"#626f38",ng_blue:"#66a0b9",light_blue:"#76d5ff",gray:"#a6a6a6",light_gray:"#cccccc",eia_red:"#a33340",eia_light_blue:"#0096d7",eia_lighter_blue:"#66c0e7",eia_lightest_blue:"#cceaf7",eia_dark_blue:"#003953",past_time:"#d9d9d9",black:"#333333",real_black:"#000000",white:"#ffffff",that_other_light_blue:"#189bd7"},p={total:{col_colors:["#a6a6a6","#333333"],curve_color:"#333333",max_line:[1466445814e3,35.18],col_range:{year:{min:[14228604e5,12.103]}}},IID:{col_colors:["#b9b1ca","#513c7a"],curve_color:"#513c7a",max_line:[14663952e5,1.06]},SCE:{col_colors:["#bed5ad","#5D9732"],curve_color:"#5D9732",max_line:[14347728e5,23.564]},LDWP:{col_colors:["#FFC702","#bf9502"],curve_color:"#FFC702",max_line:[14417712e5,6.87]},SDGE:{col_colors:["#e0d1b3","#bd732a"],curve_color:"#bd732a",max_line:[141084e7,4.684]}},m=$("#editionSelect");m.children(".text").html(d.label+" edition"),m.children(".link").append($("<a/>",d.link)),m.on("click",function(t){t.stopPropagation(),$(document).on("click.edition",function(){$(this).off("click.edition"),e()}),e()}),$("#show_notes").fancybox({hideOnContentClick:!0,width:800,height:"auto",aspectRatio:!1,autoSize:!1});var g=$(".page_tabs").tabs({activate:function(e,t){0===$(this).tabs("option","active")&&$(Highcharts.charts.filter(function(e){return void 0!==e})).each(function(){$(this.renderTo).highcharts().reflow()})}});g.tabs("option","active",null===window.location.hash.match(/commentary/)?0:1),$("#report_date").html($(".commentary_pub_date:first").text()),$("#printBtn").on("click",function(e){o(),e.preventDefault()}),$(".commentary header h1").on("click",function(){var e=$(this),t=e.parents("article");t.hasClass("active")||(t.addClass("active").siblings().removeClass("active"),$("html,body").animate({scrollTop:t.offset().top}))}),$(document).on("keydown",function(e){80==e.keyCode&&e.ctrlKey&&(o(),e.preventDefault())});var u={chart:{type:"columnrange",inverted:!1,logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:4,spacingBottom:19,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{categories:[""]},tooltip:{formatter:function(){var e="";return $.each(this.points,function(t){e+="<b>"+this.series.name+"</b><br/>"+this.point.low+"-<br/>"+this.point.high,0===t&&(e+="<br/>")}),e},shared:!0},yAxis:{title:{text:null},min:null,max:null,tickInterval:null},legend:{enabled:!1},plotOptions:{columnrange:{marker:{enabled:!1},grouping:!1}},series:[{name:"prior year",color:"black",borderWidth:0,data:[]},{name:"prior month",color:"black",borderWidth:0,data:[]}]},b={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:4,spacingBottom:6,zoomType:null,marginLeft:24},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",tickInterval:864e5,labels:{formatter:function(){return new Date(this.value).getUTCHours().toString()}},plotBands:[{from:0,to:0,label:{text:"yesterday",verticalAlign:"bottom",y:-2}},{from:0,to:0,label:{text:"today",verticalAlign:"bottom",y:-2}}],plotLines:[{color:"#cccccc",value:0,width:1}],units:[["hour",[0,12,0,12]]]},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+Highcharts.dateFormat("%l %p",this.x)+" PST<br/>"+this.y+" GWh"}},yAxis:{title:{text:null},max:null,min:null,tickInterval:null},legend:{enabled:!1},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"yesterday",color:"black",data:[]},{name:"today",color:"black",dashStyle:"ShortDash",data:[]}]},f={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:0,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:"",margin:0,style:{fontSize:"10pt",color:"#333333"}},xAxis:{type:"datetime",labels:{formatter:function(){return Highcharts.dateFormat("%b",this.value).toString().substring(0,1)},x:12},tickInterval:2628e6,showLastLabel:!1},tooltip:{},yAxis:{title:{text:null}},legend:{align:"left",verticalAlign:"top",floating:!0,x:24,y:20,backgroundColor:"none",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"last_year",color:"#000000",data:[]},{name:"this_year",color:"#000000",data:[]}]},y={chart:{type:"column",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:2,spacingBottom:10,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"category",labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}},lineColor:"#A0A0A0",tickWidth:0,gridLineWidth:1,max:8},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.y}},yAxis:{title:{text:null},labels:{y:6},plotLines:[{color:"#000000",width:1,value:0,zIndex:3}]},plotOptions:{column:{stacking:"normal"}},legend:{enabled:!1},series:[]},_={chart:{logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:12,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",labels:{x:12,formatter:function(){return Highcharts.dateFormat("%b",this.value).toString().substring(0,1)}},tickInterval:2628e6,showLastLabel:!1},tooltip:{backgroundColor:"rgba(255, 255, 255, 0.75)",style:{fontSize:"12px",color:"#000000",padding:5}},yAxis:{title:{text:null},tickInterval:20},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:-12,backgroundColor:"#ffffff",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},itemMarginTop:0,itemMarginBottom:4,padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},enableMouseTracking:!c}},series:[]},x={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:10,spacingBottom:12,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"category",labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}},lineColor:"#A0A0A0",tickWidth:0,gridLineWidth:1,max:8},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.y}},yAxis:{title:{text:null},min:null},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:-12,backgroundColor:"#ffffff",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},itemMarginTop:0,itemMarginBottom:4,padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[]},v={chart:{type:"columnrange",inverted:!1,logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:0,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:"Los Angeles temperature",margin:20,style:{fontSize:"10pt",color:"#333333"}},xAxis:{labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}}},yAxis:{gridLineColor:"#999",tickInterval:20,min:null,title:{text:"degrees Fahrenheit",style:{fontSize:"9pt",fontWeight:"normal",color:"#333333"},y:-9}},tooltip:{formatter:function(){var e="<b>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"</b>";return $.each(this.points,function(){this.point.low&&(e+="<br/>"+this.series.name+": "+this.point.low+"-"+this.point.high+" Â°F")}),e},shared:!0},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:40,backgroundColor:"white",borderWidth:0,symbolRadius:0,symbolHeight:10,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},padding:0},plotOptions:{columnrange:{grouping:!1}},series:[]},w="http://api.eia.gov/data/socal/winter_data.json",k=$("#hiddenDate").datepicker({defaultDate:0,dateFormat:"yy-mm-dd",maxDate:maxDate||0,minDate:minDate||0,numberOfMonths:1,onSelect:function(e,t){var a="../archive/winter/"+e+"_winter_socal_energy_report.pdf";window.open(a,"_blank")}});$.getJSON(w).done(function(e){$("#last_updated").text(e.report_date);var t=p.total,a=u,i=b;t.col_range&&t.col_range.year&&(t.col_range.year.min&&(e.total.last_year.min=t.col_range.year.min),t.col_range.year.max&&(e.total.last_year.max=t.col_range.year.max)),t.col_range&&t.col_range.month&&(t.col_range.month.min&&(e.total.last_month.min=t.col_range.month.min),t.col_range.month.max&&(e.total.last_month.max=t.col_range.month.max)),a.series[0].color=t.col_colors[0],a.series[0].data=[[e.total.last_year.min[1],e.total.last_year.max[1]]],a.series[1].color=t.col_colors[1],a.series[1].data=[[e.total.last_month.min[1],e.total.last_month.max[1]]],i.series[0].color=t.curve_color,i.series[0].data=e.total.actual||[],i.series[1].color=t.curve_color,i.series[1].data=e.total.forecast||[],i.yAxis.plotLines=[{value:t.max_line[1],width:1,color:h.real_black,label:{text:"record peak",style:{fontSize:"10px"},zIndex:5}}],e.total&&e.total.actual.length&&(i.xAxis.plotBands[0].from=e.total.actual[0][0]||0,i.xAxis.plotBands[0].to=e.total.actual[23][0]||0),e.total&&e.total.forecast.length?(i.xAxis.plotBands[1].from=e.total.forecast[0][0]||0,i.xAxis.plotBands[1].to=e.total.forecast[23][0]||0,i.xAxis.plotLines[0].value=e.total.forecast[0][0]):i.xAxis.plotLines[0].value=e.total.actual[23][0]+36e5;var n=$(".section.total .graph-container"),o=n.children(".load-column").highcharts(a).highcharts(),l=n.children(".load-curve").highcharts(i).highcharts(),s=o.yAxis[0].getExtremes(),d=l.yAxis[0].getExtremes(),m=Math.min(s.min,d.min),g=Math.max(s.max,d.max);isNaN(m)||isNaN(g)||(o.yAxis[0].setExtremes(m,g,!0),l.yAxis[0].setExtremes(m,g,!0));var w=e.sp15_prices&&e.sp15_prices.actual?e.sp15_prices.actual.concat(e.sp15_prices.day_ahead).map(function(e){return e[1]}):[],k={max:Math.max.apply(null,w),min:Math.min.apply(null,w)},A=5*Math.ceil((k.max+Math.abs(k.min))/10),S={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:43,spacingTop:4,spacingBottom:16,zoomType:null,marginLeft:26},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",tickInterval:864e5,labels:{formatter:function(){return new Date(this.value).getUTCHours().toString()}},plotBands:[{from:0,to:0,label:{text:"yesterday",verticalAlign:"bottom",y:27}},{from:0,to:0,label:{text:"today",verticalAlign:"bottom",y:27}}],plotLines:[{color:h.light_gray,value:0,width:1}],units:[["hour",[0,12,0,12]]]},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+Highcharts.dateFormat("%l %p",this.x)+" PST<br/>"+this.y+" $/MWh"}},yAxis:{max:k.max>100?100:null,min:k.min,title:{text:null},tickInterval:A>50?50:A,plotLines:[{color:h.real_black,value:0,width:1,zIndex:2}]},legend:{align:"right",layout:"vertical",verticalAlign:"top",margin:0,backgroundColor:h.white,borderWidth:0,itemMarginBottom:4,itemStyle:{fontSize:"10px"},width:c?56:68},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"day-ahead",color:h.light_elec_green,data:e.sp15_prices?e.sp15_prices.day_ahead:[]},{name:"actual",color:h.elec_green,data:e.sp15_prices?e.sp15_prices.actual:[]}]};e.sp15_prices&&e.sp15_prices.actual.length&&(S.xAxis.plotBands[0].from=e.sp15_prices.actual[0][0]||0,S.xAxis.plotBands[0].to=e.sp15_prices.actual[23][0]||0,S.xAxis.plotBands[1].from=e.sp15_prices.actual[23][0]+36e5||0,S.xAxis.plotBands[1].to=e.sp15_prices.actual[23][0]+864e5||0,S.xAxis.plotLines[0].value=e.sp15_prices.actual[23][0]+36e5),$("#sp15").highcharts(S);var T={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:4,spacingBottom:16,zoomType:null,marginLeft:26},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",tickInterval:864e5,labels:{formatter:function(){return new Date(this.value).getUTCHours().toString()}},plotBands:[{from:0,to:0,label:{text:"yesterday",verticalAlign:"bottom",y:27}},{from:0,to:0,label:{text:"today",verticalAlign:"bottom",y:27}}],plotLines:[{color:h.light_gray,value:0,width:1}],units:[["hour",[0,12,0,12]]]},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+Highcharts.dateFormat("%l %p",this.x)+" PST<br/>"+this.y+" GWh"}},yAxis:{title:{text:null},min:null,max:null},legend:{align:"right",layout:"vertical",verticalAlign:"top",margin:0,backgroundColor:h.white,borderWidth:0,itemMarginBottom:4,itemStyle:{fontSize:"9px",width:c?68:111},reversed:!0,width:c?99:111},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"CAISO day-ahead",color:h.light_elec_green,data:e.elec_imports?e.elec_imports.net_import.day_ahead:[]},{name:"CAISO actual",color:h.elec_green,data:e.elec_imports?e.elec_imports.net_import.actual:[]},{name:"market capability",color:h.dark_elec_green,data:e.elec_imports&&e.elec_imports.market_cap?e.elec_imports.market_cap.actual:[]}]};e.elec_imports&&e.elec_imports.net_import.actual.length&&(T.xAxis.plotBands[0].from=e.elec_imports.net_import.actual[0][0]||0,T.xAxis.plotBands[0].to=e.elec_imports.net_import.actual[23][0]||0,T.xAxis.plotBands[1].from=e.elec_imports.net_import.actual[23][0]+36e5||0,T.xAxis.plotBands[1].to=e.elec_imports.net_import.actual[23][0]+864e5||0,T.xAxis.plotLines[0].value=e.elec_imports.net_import.actual[23][0]+36e5),$("#elec_imports").highcharts(T),f.title.text="SoCal Border ($/MMBtu)",f.series=[{name:"last_year",color:h.past_time,data:e.natgas_prices?e.natgas_prices[0]:[]},{name:"this_year",color:h.ng_blue,data:e.natgas_prices?e.natgas_prices[1]:[]}],f.tooltip.formatter=function(){var e=this.series.name;Highcharts.dateFormat("%m",this.x);return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e",this.x)+"/"+e+"<br/>"+this.y};var C,z=$(".section.natgas_prices"),W=$.extend({},f);if(e.natgas_prices){2==e.natgas_prices.length&&e.natgas_prices[0].length>0&&(C=new Date(e.natgas_prices[0][0][0]).getFullYear());var D;W.series[1].data.length?(D=[W.series[1].data.slice(-1)[0][1],W.series[1].data.slice(-2)[0][1]],1===W.series[1].data.length&&(D[1]=W.series[0].data.slice(-1)[0][1])):D=[W.series[0].data.slice(-1)[0][1],W.series[0].data.slice(-2)[0][1]],z.find(".today .value").text("$"+D[0].toFixed(2)),z.find(".previous .value").text("$"+D[1].toFixed(2)),z.find(".change").text(((D[0]-D[1])/D[1]*100).toFixed(2))}else C=(new Date).getFullYear();W.series[0].name=C-1,W.series[1].name=C,z.find(".price-graph").highcharts(W);var L=e.ng_inventory_flow&&e.ng_inventory_flow.change?e.ng_inventory_flow.change:[],B=e.ng_inventory_flow&&e.ng_inventory_flow.changeFallback?e.ng_inventory_flow.changeFallback:[],F={min:Math.min(Math.min.apply(null,L),Math.min.apply(null,B)),max:Math.max(Math.max.apply(null,L),Math.max.apply(null,B))};y.yAxis.min=F.min,y.yAxis.max=F.max,y.xAxis.categories=e.ng_inventory_flow?e.ng_inventory_flow.dates:[],y.series=[{plotOptions:{column:{stacking:"normal"}},name:"net inventory change",color:h.eia_light_blue,data:L}],B.length>0&&y.series.push({name:"net inventory change (calculated)",color:"#003953",data:e.ng_inventory_flow.changeFallback});var I=$("#change").highcharts(y),M=I.highcharts().yAxis[0];F.max>0&&M.addPlotBand({from:0,to:M.max,label:{text:"net injections",verticalAlign:"top",y:10,x:2},zIndex:5}),F.min<0&&M.addPlotBand({from:0,to:M.min,label:{text:"net withdrawals",verticalAlign:"bottom",y:-3,x:2},zIndex:5}),_.series=[{name:"5yr range",type:"arearange",color:h.past_time,data:e.ng_inventory?e.ng_inventory["5yr_range"]:[]},{name:"last year",type:"line",color:h.eia_light_blue,lineWidth:3,data:e.ng_inventory?e.ng_inventory.last_year:[]},{name:"this year",type:"line",color:h.eia_dark_blue,lineWidth:3,data:e.ng_inventory?e.ng_inventory.curr_year:[]}],_.tooltip.formatter=function(){var e,t=this.series.name;Highcharts.dateFormat("%m",this.x);return e="line"===this.series.type?"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e",this.x)+"/"+t+"<br/>"+this.y:"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e",this.x)+"<br/>"+this.point.low+"-"+this.point.high};var R=(C-2).toString().substr(2,4);if(_.series[2].name=C,_.series[1].name=C-1,_.series[0].name="5yr range ("+(C-6)+"-"+R+")",$("#inventory").highcharts(_),x.chart.marginLeft=36,x.xAxis.categories=e.ng_inventory_flow?e.ng_inventory_flow.dates:[],x.series=[{name:"receipts",color:h.eia_light_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.receipts:[]},{name:"sendout",color:h.light_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.sendouts:[]}],$("#receipts").highcharts(x),$("#zones").highcharts({chart:{type:"area",logo:"none",borderRadius:0,marginLeft:36,spacingLeft:0,spacingRight:2,spacingTop:16,spacingBottom:10,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"category",categories:e.ng_inventory_flow?e.ng_inventory_flow.dates:[],labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}},max:8},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.y}},plotOptions:{area:{stacking:"normal",fillOpacity:1,marker:{symbol:"circle"},enableMouseTracking:!c}},yAxis:{title:{text:""},labels:{y:6},tickInterval:1,gridLineWidth:0},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:-24,backgroundColor:h.white,borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},itemMarginTop:10,itemMarginBottom:4,padding:0},series:[{name:"Southern",color:h.eia_lightest_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.zones.south:[]},{name:"Northern",color:h.eia_lighter_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.zones.north:[]},{name:"Wheeler Ridge",color:h.eia_light_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.zones.wheeler:[]}]}),e.ng_inventory_flow&&e.ng_inventory_flow.zones){var P={wheeler:{pos:[112,50],name:"Wheeler Ridge Zone"},north:{pos:[215,120],name:"Northern Zone"},south:{pos:[240,210],name:"Southern Zone"}},O=$("#map"),H=O.children(".labels"),E=[0,0];for(var N in P){var U=e.ng_inventory_flow.zones[N],Y=((U.slice(-1)[0]-U.slice(-2)[0])/U.slice(-2)[0]*100).toFixed(2);E[0]+=U.slice(-1)[0],E[1]+=U.slice(-2)[0],H.append($("<span>",{class:N,html:"<div>"+P[N].name+"</div><div>"+U.slice(-1)[0].toFixed(2)+" bcf</div><div>"+Y+"%</div>"}).css({left:P[N].pos[0],top:P[N].pos[1]}))}O.children(".subtitle").html("<span>Total receipts: "+E[0].toFixed(2)+" bcf</span><span>change from previous day: "+((E[0]-E[1])/E[1]*100).toFixed(2)+"% </span></div>")}var G={chart:{logo:"none",zoomType:null,spacingTop:11,spacingBottom:6},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{labels:{style:{fontSize:c?"8px":"10px"}},categories:Object.keys(e.rolling_natgas||{}),plotBands:[{from:0,to:1,label:{text:"market",verticalAlign:"top",y:-2}},{from:2,to:4,label:{text:"supply",verticalAlign:"top",y:-2}}],plotLines:[{value:1.5,color:"#666",width:1,zIndex:2}]},tooltip:{formatter:function(){var e="<b>"+this.x+'</b> <span style="font-size:x-small;"> (rolling average)</span>';for(var t in this.points)for(var a in this.points[t].series.data){var i=this.points[t].series.data[a];i.low&&(e+="<br/><strong>"+i.name+"</strong>: "+i.low+" â "+i.high)}return this.points.length>1&&(e+="<br/><strong>today</strong>: "+this.points[1].y),e},shared:!0,backgroundColor:"rgba(255, 255, 255, 0.75)",style:{fontSize:"12px",color:h.real_black,padding:5}},yAxis:{min:null,max:null,plotLines:[{value:0,color:"#999",width:1,zIndex:2}],title:{text:null}},legend:{enabled:!1},plotOptions:{columnrange:{grouping:!1,enableMouseTracking:!c}},series:[]},j=0;for(var q in e.rolling_natgas){var Z=[["#b9b1ca","#513c7a"],["#b9b1ca","#513c7a"],["#ffdd67","#bf9502"],["#ffdd67","#bf9502"],["#ffdd67","#bf9502"]];G.series.push({name:q,borderWidth:0,pointWidth:22,type:"columnrange",data:[{x:j,name:"previous year",color:Z[j][0],low:e.rolling_natgas[q].year[0],high:e.rolling_natgas[q].year[1]},{x:j,name:"previous month",color:Z[j++][1],low:e.rolling_natgas[q].month[0],high:e.rolling_natgas[q].month[1]}]})}G.series.push({type:"spline",name:"today",key:"today",lineWidth:0,data:Object.keys(e.rolling_natgas).map(function(t,a){return e.rolling_natgas[t].day||null}),enableMouseTracking:!c,marker:{symbol:"circle",fillColor:h.white,lineColor:h.black,lineWidth:1}}),$("#socal_border").highcharts(G),v.xAxis.categories=e.temp?e.temp.dates:[],v.series=[{name:"record range",color:h.past_time,pointWidth:22,borderWidth:0,data:e.temp?e.temp.record:[]},{name:"normal range",color:h.gray,pointWidth:22,borderWidth:0,data:e.temp?e.temp.normal:[]},{name:"actual",color:h.eia_red,pointWidth:14,borderWidth:0,data:e.temp?e.temp.actual:[]},{name:"forecast",color:"transparent",borderColor:h.eia_red,borderWidth:2,pointWidth:11,data:e.temp?e.temp.forecast:[]}];var J=$("#laTemps").highcharts(v).highcharts();$(J.series[3].legendSymbol.element).attr({"stroke-width":2,stroke:h.eia_red}),c&&r()});var A,S;$(function(){var e,t=$(".page_tabs").tabs(),a=[{element:".section.receipts .graph-container",title:"Daily natural gas receipts and sendout",content:"This chart indicates SoCalGasâ daily receipts of natural gas in billion cubic per day from pipelines and in-state producers compared to its total load.  The difference is made up by reliance on natural gas storage."},{element:".section.zones .graph-container",title:"Daily natural gas receipts by zone",content:"This chart shows daily deliveries of natural gas to each of SoCalGas' major receipt zones: Southern, Northern, and the Wheeler Ridge area."},{element:".section.change .graph-container",title:"Daily net inventory change",content:"Net daily changes in SoCalGas storage inventories show how storage injections and withdrawals balance demand for natural gas with available supplies.",placement:"auto"},{element:".section.la-temps",title:"Los Angeles temperature",content:"Past actual temperatures and near-future forecasts of daily low and high temperatures for Los Angeles. For the winter, temperatures are a good measure of likely furnace load for space heating needs, and Los Angeles is the center of the metropolitan area.",placement:"auto"},{element:".section.total",title:"Balancing Authority data and projections",content:"Hourly electric load summed across Southern California, including load by these utilities: Southern California Edison, Los Angeles Department of Water and Power, San Diego Gas and Electric Company, and the Imperial Irrigation District.",placement:"auto"},{element:".section.total .load-curve",title:"Peak load record",content:"The black horizontal line indicates the record coincident peak load.",placement:"auto"},{element:".section.net_imports",title:"Natural gas infrastructure",content:"Illustrates the role that electricity imports from the Pacific Northwest into California play in meeting Southern California's seasonal loads. The chart shows hourly electricity flows transmitted by the Bonneville Power Administration to CAISO along the Pacific DC Intertie.",placement:"auto"},{element:".section.sp15",title:"SP-15 locational marginal price",content:"Spot electricity prices at the SP15 trading point &mdash; the main zone for trading electricity in Southern California &mdash; are reported by hour. Illustrates how the day-ahead prices by hour for yesterday compare to actual prices.",placement:"auto"},{element:".section.inventory .graph-container",title:"Daily natural gas inventory",content:"The annual trend in natural gas storage inventories in Southern California is compared to last year's inventory level at this time and to the preceding five-year range."},{element:".section.price_diff",title:"Daily price difference to SoCal border",content:"This chart shows how winter market fundamentals (supply, demand, and storage) can lead to price differences between the Southern California border and market and supply trading points relevant to Southern California."},{element:".section.natgas_prices",title:"Natural gas prices",content:"Southern California daily wholesale natural gas prices are shown for the past year and for the current year. Prices in these actively traded markets reflect periods of stress on the energy delivery systems. The day-over-day percent change is also included."},{element:"#map",title:"Regional map",content:'This map shows the key natural gas pipeline and storage infrastructure in Southern California. Zone colors match the colors in the <em>receipts by zone</em> chart.<img src="../images/20161107/zone_chart.png"',placement:"auto",onNext:function(){t.tabs("option","active",1)}},{element:".ui-tabs li:eq(1)",title:"Commentary",content:"Occasionally, EIA will include short posts that discuss key changes in the market or other details.",onPrev:function(){t.tabs("option","active",0)}},{element:".right_col .blue_top",title:"Related links",content:"The Commentary section also includes links to other sources like the U.S. Department of Energy's Office of Electricity Delivery and Energy Reliability's Energy Assurance Daily report; the National Oceanic and Atmospheric Administration's weather forecasts; and reports and data from the California Public Utilities Commission, the California Independent System Operator, and SoCalGas.",placement:"left"},{element:".pub-date span:eq(0)",title:"Updated daily",content:"EIA updates the report at about 7:00a.m. Pacific Time (10:00 a.m. Eastern Time) every morning.",backdropPadding:{top:5,left:5,bottom:5,right:2}},{element:"#editionSelect",title:"Report edition",content:"Users can choose to view the winter or summer edition of the report. The winter edition provides more details on natural gas activity than the summer edition, which focuses primarily on electricity markets.",placement:"left",backdropPadding:{top:5,left:-5,bottom:5,right:20}}];$.each(a,function(e,t){t.title='<span class="text">'+t.title+'</span><span class="right">'+(e+1)+"/"+a.length+"</span>";var i=parseInt((e+1)/a.length*100);t.content='<div class="pbar_wrapper"><hr class="pbar" style="width:'+i+'%;"></div>'+t.content});var i=new Tour({storage:!1,backdrop:!0,steps:a,template:function(e,t){parseInt((e+1)/a.length*100);return"<div class='popover tour'><div class='arrow'></div><h3 class='popover-title'></h3><div class='popover-content'></div><div class='popover-navigation'><button class='btn btn-default' data-role='prev'>&laquo; Prev</button><button class='btn btn-default' data-role='next'>Next &raquo;</button><button class='btn btn-default' data-role='end'>Close</button></div></div>"},onStart:function(){e=t.tabs("option","active"),t.tabs("option","active",0)},onEnd:function(){t.tabs("option","active",e)}});i.init(),$("#startTourBtn").click(function(){i.restart()})}),$("#pickDate").click(function(e){k.datepicker("show"),e.preventDefault()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function(){"use strict";function e(){var e=$("#editionSelect");e.toggleClass("active").children(".arrow").toggleClass("s-arrow n-arrow"),e.children(".link").toggle()}function t(e){function t(){var t=e[a].width,o=e[a].height,r=$(this);n=r.width(),o&&(i=r.height(),r.height(o)),r.width(t).parentsUntil(e[a].parent).width(t),r.highcharts().reflow()}for(var a in e){var n,i;$(a).each(t),e[a].width=n,e[a].height=i}}function a(e,t){function a(e,t){$(t).highcharts().yAxis[0].setExtremes(o,r,!0)}function n(e,t){s.push($(t).highcharts().yAxis[0].getExtremes())}for(var i in e){var o,r,l=$(".section."+i).find(".load-curve,.load-column"),s=[];"d"==t?(l.each(n),o=Math.min(s[0].min,s[1].min),r=Math.max(s[0].max,s[1].max),isNaN(o)||isNaN(r)||l.each(a)):(o=r=null,l.each(a))}}function n(){r()}function i(){l()}function o(){n(),setTimeout(function(){window.print(),i()},1e3)}function r(){A={".load-column":{parent:".graph-container",width:67},".load-curve":{parent:".graph-container",width:192},".price-graph":{parent:".graph-container",width:243},"#laTemps, #receipts, #change, #inventory":{parent:".section",width:300}},t(A)}function l(){t(A)}var s=window.location.pathname.split("/");s.pop();var c=null!==window.location.search.match("print"),d={winter:{label:"Winter",link:{text:"Summer edition",href:"../summer"}},summer:{label:"Summer",link:{text:"Winter edition",href:"../winter"}}}[s[s.length-1].toLowerCase()],h={elec_green:"#92a753",light_elec_green:"#d3dbb9",dark_elec_green:"#626f38",ng_blue:"#66a0b9",light_blue:"#76d5ff",gray:"#a6a6a6",light_gray:"#cccccc",eia_red:"#a33340",eia_light_blue:"#0096d7",eia_lighter_blue:"#66c0e7",eia_lightest_blue:"#cceaf7",eia_dark_blue:"#003953",past_time:"#d9d9d9",black:"#333333",real_black:"#000000",white:"#ffffff",that_other_light_blue:"#189bd7"},m={total:{col_colors:["#a6a6a6","#333333"],curve_color:"#333333",max_line:[1466445814e3,35.18],col_range:{year:{min:[14228604e5,12.103]}}},IID:{col_colors:["#b9b1ca","#513c7a"],curve_color:"#513c7a",max_line:[14663952e5,1.06]},SCE:{col_colors:["#bed5ad","#5D9732"],curve_color:"#5D9732",max_line:[14347728e5,23.564]},LDWP:{col_colors:["#FFC702","#bf9502"],curve_color:"#FFC702",max_line:[14417712e5,6.87]},SDGE:{col_colors:["#e0d1b3","#bd732a"],curve_color:"#bd732a",max_line:[141084e7,4.684]}},g=$("#editionSelect");g.children(".text").html(d.label+" edition"),g.children(".link").append($("<a/>",d.link)),g.on("click",function(t){t.stopPropagation(),$(document).on("click.edition",function(){$(this).off("click.edition"),e()}),e()}),$("#show_notes").fancybox({hideOnContentClick:!0,width:800,height:"auto",aspectRatio:!1,autoSize:!1});var p=$(".page_tabs").tabs({activate:function(e,t){0===$(this).tabs("option","active")&&$(Highcharts.charts.filter(function(e){return void 0!==e})).each(function(){$(this.renderTo).highcharts().reflow()})}});p.tabs("option","active",null===window.location.hash.match(/commentary/)?0:1),$("#report_date").html($(".commentary_pub_date:first").text()),$("#printBtn").on("click",function(e){o(),e.preventDefault()}),$(".commentary header h1").on("click",function(){var e=$(this),t=e.parents("article");t.hasClass("active")||(t.addClass("active").siblings().removeClass("active"),$("html,body").animate({scrollTop:t.offset().top}))}),$(document).on("keydown",function(e){80==e.keyCode&&e.ctrlKey&&(o(),e.preventDefault())});var u={chart:{type:"columnrange",inverted:!1,logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:4,spacingBottom:19,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{categories:[""]},tooltip:{formatter:function(){var e="";return $.each(this.points,function(t){e+="<b>"+this.series.name+"</b><br/>"+this.point.low+"-<br/>"+this.point.high,0===t&&(e+="<br/>")}),e},shared:!0},yAxis:{title:{text:null},min:null,max:null,tickInterval:null},legend:{enabled:!1},plotOptions:{columnrange:{marker:{enabled:!1},grouping:!1}},series:[{name:"prior year",color:"black",borderWidth:0,data:[]},{name:"prior month",color:"black",borderWidth:0,data:[]}]},f={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:4,spacingBottom:6,zoomType:null,marginLeft:24},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",tickInterval:864e5,labels:{formatter:function(){return new Date(this.value).getUTCHours().toString()}},plotBands:[{from:0,to:0,label:{text:"yesterday",verticalAlign:"bottom",y:-2}},{from:0,to:0,label:{text:"today",verticalAlign:"bottom",y:-2}}],plotLines:[{color:"#cccccc",value:0,width:1}],units:[["hour",[0,12,0,12]]]},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+Highcharts.dateFormat("%l %p",this.x)+" PST<br/>"+this.y+" GWh"}},yAxis:{title:{text:null},max:null,min:null,tickInterval:null},legend:{enabled:!1},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"yesterday",color:"black",data:[]},{name:"today",color:"black",dashStyle:"ShortDash",data:[]}]},b={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:0,spacingTop:0,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:"",margin:0,style:{fontSize:"10pt",color:"#333333"}},xAxis:{type:"datetime",labels:{formatter:function(){return Highcharts.dateFormat("%b",this.value).toString().substring(0,1)},x:12},tickInterval:2628e6,showLastLabel:!1},tooltip:{},yAxis:{title:{text:null}},legend:{align:"left",verticalAlign:"top",floating:!0,x:24,y:20,backgroundColor:"none",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[{name:"last_year",color:"#000000",data:[]},{name:"this_year",color:"#000000",data:[]}]},y={chart:{type:"column",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:2,spacingBottom:10,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"category",labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}},lineColor:"#A0A0A0",tickWidth:0,gridLineWidth:1,max:8},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.y}},yAxis:{title:{text:null},labels:{y:6},plotLines:[{color:"#000000",width:1,value:0,zIndex:3}]},plotOptions:{column:{stacking:"normal"}},legend:{enabled:!1},series:[]},v={chart:{logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:12,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"datetime",labels:{x:12,formatter:function(){return Highcharts.dateFormat("%b",this.value).toString().substring(0,1)}},tickInterval:2628e6,showLastLabel:!1},tooltip:{backgroundColor:"rgba(255, 255, 255, 0.75)",style:{fontSize:"12px",color:"#000000",padding:5}},yAxis:{title:{text:null},tickInterval:20},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:-12,backgroundColor:"#ffffff",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},itemMarginTop:0,itemMarginBottom:4,padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},enableMouseTracking:!c}},series:[]},x={chart:{type:"line",logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:10,spacingBottom:12,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:null},xAxis:{type:"category",labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}},lineColor:"#A0A0A0",tickWidth:0,gridLineWidth:1,max:8},tooltip:{formatter:function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.y}},yAxis:{title:{text:null},min:null},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:-12,backgroundColor:"#ffffff",borderWidth:0,symbolRadius:0,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},itemMarginTop:0,itemMarginBottom:4,padding:0,reversed:!0},plotOptions:{series:{marker:{enabled:!1},lineWidth:3,enableMouseTracking:!c}},series:[]},_={chart:{type:"columnrange",inverted:!1,logo:"none",borderRadius:0,spacingLeft:0,spacingRight:2,spacingTop:0,spacingBottom:6,zoomType:null},credits:{enabled:!1},exporting:{enabled:!1},title:{text:"Los Angeles temperature",margin:20,style:{fontSize:"10pt",color:"#333333"}},xAxis:{labels:{formatter:function(){return new Date(this.value).getUTCDate().toString()}}},yAxis:{gridLineColor:"#999",tickInterval:20,min:null,title:{text:"degrees Fahrenheit",style:{fontSize:"9pt",fontWeight:"normal",color:"#333333"},y:-9}},tooltip:{formatter:function(){var e="<b>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"</b>";return $.each(this.points,function(){this.point.low&&(e+="<br/>"+this.series.name+": "+this.point.low+"-"+this.point.high+" Â°F")}),e},shared:!0},legend:{align:"left",verticalAlign:"top",floating:!0,x:28,y:40,backgroundColor:"white",borderWidth:0,symbolRadius:0,symbolHeight:10,symbolWidth:10,symbolPadding:2,itemDistance:6,itemStyle:{fontSize:"10px"},padding:0},plotOptions:{columnrange:{grouping:!1}},series:[]},w="http://api.eia.gov/data/socal/summer_data.json",k=$("#hiddenDate").datepicker({defaultDate:0,dateFormat:"yy-mm-dd",minDate:minDate||0,maxDate:maxDate||0,numberOfMonths:1,onSelect:function(e,t){var a="../archive/summer/"+e+"_summer_socal_energy_report.pdf";window.open(a,"_blank")}});$.getJSON(w).done(function(e){$("#last_updated").text(e.report_date);for(var t in m){var n=$.extend({},u),i=$.extend({},f);m[t].col_range&&m[t].col_range.year&&(m[t].col_range.year.min&&(e[t].last_year.min=m[t].col_range.year.min),m[t].col_range.year.max&&(e[t].last_year.max=m[t].col_range.year.max)),m[t].col_range&&m[t].col_range.month&&(m[t].col_range.month.min&&(e[t].last_month.min=m[t].col_range.month.min),m[t].col_range.month.max&&(e[t].last_month.max=m[t].col_range.month.max)),n.series[0].color=m[t].col_colors[0],n.series[0].data=[[e[t].last_year.min[1],e[t].last_year.max[1]]],n.series[1].color=m[t].col_colors[1],n.series[1].data=[[e[t].last_month.min[1],e[t].last_month.max[1]]],i.series[0].color=m[t].curve_color,i.series[0].data=e[t].actual||[],i.series[1].color=m[t].curve_color,i.series[1].data=e[t].forecast||[],i.yAxis.plotLines=[{value:m[t].max_line[1],width:1,color:h.real_black,label:{text:"record peak",style:{fontSize:"10px"}},zIndex:5}],e[t].actual.length&&(i.xAxis.plotBands[0].from=e[t].actual[0][0]||0,i.xAxis.plotBands[0].to=e[t].actual[23][0]||0),e[t].forecast.length?(i.xAxis.plotBands[1].from=e[t].forecast[0][0]||0,i.xAxis.plotBands[1].to=e[t].forecast[23][0]||0,i.xAxis.plotLines[0].value=e[t].forecast[0][0]):i.xAxis.plotLines[0].value=e[t].actual[23][0]+36e5;var o=$(".section."+t+" .graph-container");o.children(".load-column").highcharts(n),o.children(".load-curve").highcharts(i)}$("#viewToggle").find(".switch input").on("change",function(e){var t=void 0!==$(this).attr("checked")?"r":"d";a(m,t)}).change(),b.chart.marginLeft=25,b.tooltip.formatter=function(){return"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e",this.x)+"/"+this.series.name+"<br/>"+this.y};var l,s={elec_prices:{title:"SP15 on-peak ($/MWh)",color:[h.past_time,h.elec_green]},natgas_prices:{title:"SoCal Border ($/MMBtu)",color:[h.past_time,h.ng_blue]}};for(t in s){l=2==e[t].length&&e[t][0].length>0?new Date(e[t][0][0][0]).getFullYear():(new Date).getFullYear();var d=$.extend({},b);d.title.text=s[t].title,d.series[0].name=l-1,d.series[0].color=s[t].color[0],d.series[0].data=e[t][0],d.series[1].name=l,d.series[1].color=s[t].color[1],d.series[1].data=e[t][1],d.xAxis.min=Date.UTC((new Date).getFullYear(),0,1),d.xAxis.max=Date.UTC((new Date).getFullYear(),11,31);var g=$(".section."+t),p=[d.series[1].data.slice(-1)[0][1],d.series[1].data.slice(-2)[0][1]];1===d.series[1].data.length&&(p[1]=d.series[0].data.slice(-1)[0][1]),g.find(".today .value").text("$"+p[0].toFixed(2)),g.find(".previous .value").text("$"+p[1].toFixed(2)),g.find(".change").text(((p[0]-p[1])/p[1]*100).toFixed(2)),g.find(".price-graph").highcharts(d)}var w=e.ng_inventory_flow&&e.ng_inventory_flow.change?e.ng_inventory_flow.change:[],k=e.ng_inventory_flow&&e.ng_inventory_flow.changeFallback?e.ng_inventory_flow.changeFallback:[],A={min:Math.min(Math.min.apply(null,w),Math.min.apply(null,k)),max:Math.max(Math.max.apply(null,w),Math.max.apply(null,k))};y.yAxis.min=A.min,y.yAxis.max=A.max,y.chart.marginLeft=33,y.xAxis.categories=e.ng_inventory_flow?e.ng_inventory_flow.dates:[],y.series=[{plotOptions:{column:{stacking:"normal"}},name:"net inventory change",color:h.eia_light_blue,data:w}],k.length>0&&y.series.push({name:"net inventory change (calculated)",color:"#003953",data:e.ng_inventory_flow.changeFallback});var S=$("#change").highcharts(y),C=S.highcharts().yAxis[0];A.max>0&&C.addPlotBand({from:0,to:C.max,label:{text:"net injections",verticalAlign:"top",y:10,x:2},zIndex:5}),A.min<0&&C.addPlotBand({from:0,to:C.min,label:{text:"net withdrawals",verticalAlign:"bottom",y:-3,x:2},zIndex:5}),v.series=[{name:"5yr range",type:"arearange",color:h.past_time,data:e.ng_inventory["5yr_range"]},{name:"last year",type:"line",color:h.eia_light_blue,lineWidth:3,data:e.ng_inventory.last_year},{name:"this year",type:"line",color:h.eia_dark_blue,lineWidth:3,data:e.ng_inventory.curr_year}],v.tooltip.formatter=function(){var e;return e="line"===this.series.type?"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e",this.x)+"/"+this.series.name+"<br/>"+this.y:"<b>"+this.series.name+"</b><br/>"+Highcharts.dateFormat("%m/%e/%Y",this.x)+"<br/>"+this.point.low+"-"+this.point.high};var T=l-2,D=T.toString().substr(2,4);v.series[2].name=l,v.series[1].name=l-1,v.series[0].name="5yr range ("+(l-6)+"-"+D+")",$("#inventory").highcharts(v),x.chart.marginLeft=33,x.xAxis.categories=e.ng_inventory_flow?e.ng_inventory_flow.dates:[],x.yAxis.tickInterval=.5,x.xAxis.labels.enabled=!1,x.series=[{name:"receipts",color:h.eia_light_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.receipts:[]},{name:"sendout",color:h.light_blue,data:e.ng_inventory_flow?e.ng_inventory_flow.sendouts:[]}],$("#receipts").highcharts(x),_.xAxis.categories=e.temp?e.temp.dates:[],_.series=[{name:"record range",color:h.past_time,pointWidth:22,borderWidth:0,data:e.temp?e.temp.record:[]},{name:"normal range",color:h.gray,pointWidth:22,borderWidth:0,data:e.temp?e.temp.normal:[]},{name:"actual",color:h.eia_red,pointWidth:14,borderWidth:0,data:e.temp?e.temp.actual:[]},{name:"forecast",color:"transparent",borderColor:h.eia_red,borderWidth:2,pointWidth:11,data:e.temp?e.temp.forecast:[]}];var W=$("#laTemps").highcharts(_).highcharts();$(W.series[3].legendSymbol.element).attr({"stroke-width":2,stroke:h.eia_red}),c&&r()});var A;$(function(){var e,t=$(".page_tabs").tabs(),a=[{element:".section.total",title:"Balancing Authority data and projections",content:"The Southern California Daily Energy Report displays hourly electric load across Southern California, and has details about that load from utilities including Southern California Edison, Los Angeles Department of Water and Power, San Diego Gas and Electric Company, and the Imperial Irrigation District. Historically, Aliso Canyon provided natural gas supply flexibility to manage variability in daily and hourly electricity demand. These levels are compared to historical ranges to show if a load is high or low.",backdropPadding:{bottom:512}},{element:".section.total .load-curve",title:"Peak load record",content:"Black horizontal lines indicate load records. On the totals chart, the black horizontal line indicates the record coincident peak load.",placement:"auto"},{element:".section.la-temps",title:"Los Angeles temperature",content:"The Southern California Daily Energy Report displays past actual and near-future forecasts of daily low and high temperatures in Los Angeles. Changes in temperatures are a good measure of likely load, and Los Angeles is the center of the metropolitan area. These daily ranges are compared to normal ranges and to record ranges to show whether temperatures are high or low.",placement:"left"},{element:".section.socalgas .receipts",title:"SoCalGas receipts, sendout and inventory",content:"The Southern California Daily Energy Report shows recent daily natural gas receipts and sendout levels to determine if daily non-storage sources of natural gas are sufficient to meet demand. Net daily changes in aggregate SoCalGas storage inventories show how storage injections and withdrawals balance demand for natural gas with available supplies.",placement:"left",backdropPadding:{bottom:100}},{element:".section.socalgas .inventory",title:"SoCalGas natural gas inventory",content:"The annual trend in natural gas storage inventories in Southern California is compared to last yearâs inventory level at this time and to the preceding five-year range.",placement:"left"},{element:".section.elec_prices",title:"Electricity and natural gas prices",content:"Southern California daily wholesale on-peak power and natural gas prices are shown for the past year and for the current year. Prices in these actively traded markets reflect periods of stress on the energy delivery systems. The day-over-day percent change is also included.",backdropPadding:{bottom:125}},{element:"#map",title:"Utility map",content:"This map shows pricing locations and utility service areas in Southern California.",placement:"left",onNext:function(){t.tabs("option","active",1)}},{element:".ui-tabs li:eq(1)",title:"Commentary",content:"Occasionally, EIA will include short posts that discuss key changes in the market or other details.",onPrev:function(){t.tabs("option","active",0)}},{element:".right_col .blue_top",title:"Related links",content:"The Commentary section also includes links to other sources like the U.S. Department of Energyâs Office of Electricity Delivery and Energy Reliabilityâs Energy Assurance Daily report; the National Oceanic and Atmospheric Administrationâs weather forecasts; and reports and data from the California Public Utilities Commission, the California Independent System Operator, and SoCalGas.",placement:"left"},{element:".pub-date span:eq(0)",title:"Updated daily",content:"EIA updates the report at about 7:00a.m. Pacific Time (10:00 a.m. Eastern Time) every morning.",backdropPadding:{top:5,left:5,bottom:5,right:2}},{element:"#editionSelect",title:"Report edition",content:"Users can choose to view the summer or winter edition of the report. The summer edition focuses primarily on electricity markets, while the winter edition provides more details on natural gas activity.",placement:"left",backdropPadding:{top:5,left:-5,bottom:5,right:20}}];$.each(a,function(e,t){t.title='<span class="text">'+t.title+'</span><span class="right">'+(e+1)+"/"+a.length+"</span>";var n=parseInt((e+1)/a.length*100);t.content='<div class="pbar_wrapper"><hr class="pbar" style="width:'+n+'%;"></div>'+t.content});var n=new Tour({storage:!1,backdrop:!0,steps:a,template:function(e,t){parseInt((e+1)/a.length*100);return"<div class='popover tour'><div class='arrow'></div><h3 class='popover-title'></h3><div class='popover-content'></div><div class='popover-navigation'><button class='btn btn-default' data-role='prev'>&laquo; Prev</button><button class='btn btn-default' data-role='next'>Next &raquo;</button><button class='btn btn-default' data-role='end'>Close</button></div></div>"},onStart:function(){e=t.tabs("option","active"),t.tabs("option","active",0)},onEnd:function(){t.tabs("option","active",e)}});n.init(),$("#startTourBtn").click(function(){n.restart()})}),$("#pickDate").click(function(e){k.datepicker("show"),e.preventDefault()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
